version: "3.8"
services:
  nginx:
    image: nginx:latest
    ports:
      - "8000:8000"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - fastapi
      - streamlit
      - prometheus

  db:
    image: postgres:15
    command:
      - "postgres"
      - "-c"
      - "max_connections=500"
      - "-c"
      - "shared_buffers=2GB"
      - "-c"
      - "effective_cache_size=6GB"
      - "-c"
      - "work_mem=64MB"
      - "-c"
      - "maintenance_work_mem=512MB"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "temp_file_limit=10GB"
      - "-c"
      - "log_min_duration_statement=200ms"
      - "-c"
      - "idle_in_transaction_session_timeout=10s"
      - "-c"
      - "lock_timeout=1s"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=dbname
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d dbname"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 6g
        reservations:
          memory: 4g

  fastapi:
    build:
      context: .
      dockerfile: Dockerfile.fastapi
    expose:
      - "8000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql+asyncpg://user:password@db:5432/dbname
      - PYTHONPATH=/code
      - POOL_SIZE=250
      - MAX_OVERFLOW=50
      - POOL_TIMEOUT=30
      - POOL_RECYCLE=1800
    volumes:
      - ./app:/code/app
      - ./alembic:/code/alembic
      - ./alembic.ini:/code/alembic.ini
    command: >
      sh -c "
        echo 'Waiting for PostgreSQL...' &&
        while ! pg_isready -h db -p 5432 -U user -d dbname; do
          sleep 1
        done &&
        echo 'PostgreSQL is up - executing command' &&
        alembic upgrade head &&
        uvicorn app.main:app --host 0.0.0.0 --port 8000
      "
    restart: always

  streamlit:
    build:
      context: .
      dockerfile: Dockerfile.streamlit
    expose:
      - "8501"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql+asyncpg://user:password@db:5432/dbname
      - PYTHONPATH=/code
      - POOL_SIZE=250
      - MAX_OVERFLOW=50
      - POOL_TIMEOUT=30
      - POOL_RECYCLE=1800
    volumes:
      - ./streamlit_app:/code/streamlit_app

  prometheus:
    image: prom/prometheus:v2.30.3
    depends_on:
      - fastapi
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
      - "--web.external-url=/prometheus"
      - "--web.route-prefix=/prometheus"
    expose:
      - "9090"
    restart: always

volumes:
  postgres_data:
  prometheus_data:
  grafana_data:
